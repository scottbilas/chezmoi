## COMMON ENV

# a few apps don't respect XDG spec (i.e. they use ~/.myappname if this isn't set)..
export XDG_CONFIG_HOME=$HOME/.config

# early we need brew in there so we have access to commands
[[ -d /home/linuxbrew ]] && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

if (( $+commands[micro] )); then
  export EDITOR=micro
  export VISUAL=micro
fi

# paging

if (( $+commands[most] )); then
    export PAGER=most
else
    export PAGER=less
fi

# todo: why did i add this..?
[[ "$OSTYPE" == darwin* ]] && export BROWSER=open

# set a default LANG
# todo: why do i need this..?
[[ -z "$LANG" ]] && export LANG='en_US.UTF-8'

## reroute configs and set paths

export GOPATH=$HOME/go
export BAT_CONFIG_PATH=$HOME/.config/bat/bat.conf
export WEECHAT_HOME=$HOME/.config/weechat
export ELINKS_CONFDIR=$HOME/.config/elinks
export RIPGREP_CONFIG_PATH=$HOME/.config/ripgrep/config

if (( $+commands[fasd] )); then
  # move out of root (folder not autocreated by fasd)
  mkdir -p ~/.local/share/fasd
  export _FASD_DATA=$HOME/.local/share/fasd/data
fi

## tune app settings

if (( $+commands[fzf] )); then
    export FZF_DEFAULT_OPTS="--tabstop=4 --preview-window=right:60% --bind 'alt-p:toggle-preview' --preview '(bat --color=always {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -500'"
# debian: sudo apt install fd-find && sudo ln -s /usr/bin/fdfind /usr/local/bin/fd
    export FZF_DEFAULT_COMMAND='fd --hidden --type file --type symlink'
    # TODO: this is outdated..get automatic tmux working
    export FZF_TMUX=1
fi

# ensure bat uses `less`, it's not so good with `most`
export BAT_PAGER=less

export MICRO_TRUECOLOR=1
export DOTNET_CLI_TELEMETRY_OPTOUT=1
export HOMEBREW_NO_ENV_HINTS=1
# todo: why do I have --no-init and -z-4?
export LESS='--quit-if-one-screen --hilite-search --hilite-unread --ignore-case --long-prompt --raw-control-chars --no-init -z-4'

# todo: why do I have this?
# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $+commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

if (( $+commands[vivid] )); then
  # help choose theme for ls colors..
  #
  #for theme in $(vivid themes); do
  #  echo "Theme: $theme"
  #  LS_COLORS=$(vivid generate $theme) ls -al
  #  echo
  #done
  export LS_COLORS=$(vivid generate solarized-dark)
fi

if (( $+commands[oh-my-posh] )); then
  eval "$(oh-my-posh init zsh -c ~/.config/oh-my-posh/prompt.json)"
elif (( $+commands[starship] )); then
  eval "$(starship init zsh)"
fi

# other

# completion

autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# todo: figure out why getting compdef error after uncommenting below
# (see https://github.com/sorin-ionescu/prezto/issues/1138)
# bash compatibility
#autoload -U bashcompinit && bashcompinit
#
#if [[ $(type -p az) ]]; then
#    . ~/lib/azure-cli/az.completion
#fi

[[ $- == *i* ]] && source $HOME/.config/fzf/fzf/shell/completion.zsh 2> /dev/null
source $HOME/.config/fzf/fzf/shell/key-bindings.zsh 2> /dev/null
### FIX ME ^^ drop the /dev/null routing of errors

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

cdpath=(
  $cdpath
  ~
)

path=(
  /usr/local/{bin,sbin}
  $path
  ~/.local/bin
  $GOPATH/bin
  ~/.local/share/repos/dasht/bin
  ~/.poetry/bin
)

#####

[[ -d ~/.poetry ]] && source ~/.poetry/env
#todo: check this works
#fpath+=~/extern/dasht/etc/zsh/completions/

# needed if dasht not installed via a package mamager
if (( $+commands[dasht] )); then
#  export MANPATH=$commands[dasht]:h:h/man
#  source $commands[dasht]:h:h/etc/zsh/completions.zsh
fi

(( $+commands[chezmoi] )) && eval "$(chezmoi completion zsh)"
# fzf. fasd, etc.

#### LAST

# keep these last so they override any modules

## OPTIONS

setopt auto_pushd

## history-related

mkdir -p ~/.local/share/zsh
HISTFILE=~/.local/share/zsh/history
HISTSIZE=5000  # memory buffer max size in lines
SAVEHIST=5000   # file max size in lines
setopt append_history          # append to history file instead of overwrite
setopt share_history           # share command history data across terminals
setopt bang_hist               # https://linuxhint.com/search-in-my-zsh-history/
setopt hist_ignore_all_dups    # don't want any dups in history at all
setopt hist_ignore_space       # leading space will prevent adding the command to history

# map up/down arrow to partial history-based match, while also supporting cursoring
# within a multiline command.
autoload up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey '^[[A' up-line-or-beginning-search
bindkey '^[[B' down-line-or-beginning-search

## line editing

# ctrl left/right to move word left/right
bindkey '^[[1;5C' emacs-forward-word
bindkey '^[[1;5D' emacs-backward-word
# home and end
bindkey '^[[1~' beginning-of-line
bindkey '^[[4~' end-of-line
# undo/redo
bindkey '^Y' redo
bindkey '^Z' undo

## (un-)line editing

do-nothing() {}
zle -N do-nothing

# pageup/down ignore to prevent accidental crudding on fn lock laptop
bindkey '^[[5~' do-nothing
bindkey '^[[6~' do-nothing

# TODO: review https://stackoverflow.com/questions/5407916/zsh-zle-shift-selection
# (read all the answers...)
# would be nice to get it like posh
# is this in any zsh module currently?

## aliases

source ~/.config/zsh/zaliases

# finally any modules

(( $+commands[fasd] )) && eval "$(fasd --init auto)"

export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
bindkey '^ ' autosuggest-accept

if (( $+commands[sheldon] )); then
  eval "$(sheldon source)"

  # set fast-syntax-highlighter theme if one not already set
  [[ ! -f ~/.cache/fsh/current_theme.zsh ]] && zsh-defer fast-theme -q free

  # set shell theme if not set
  # TODO: doesn't work..base16_* are generated aliases and even a manual `setopt aliases` (on by default) gives a command not found error.
  #[[ ! -f ~/.base16_theme ]] && base16_twilight

  [[ -f ~/.base16_theme ]] && . ~/.base16_theme
fi

# don't like these, ensure they aren't set
unsetopt auto_cd
unsetopt cdable_vars
