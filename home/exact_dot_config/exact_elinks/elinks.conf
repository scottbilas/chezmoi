## ELinks 0.12pre6 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?


set connection.ssl.cert_verify = 0

##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##################################
# Automatically saved keybindings
#

bind "main" "Ctrl-C" = "copy-clipboard"
bind "main" "Shift-F3" = "find-next-back"
bind "main" "F3" = "find-next"
bind "main" "Shift-Ctrl-Tab" = "tab-prev"
bind "main" "Ctrl-Tab" = "tab-next"
bind "main" "Ctrl-T" = "open-link-in-new-window"
bind "main" "Alt-Tab" = "none"
bind "main" "Ctrl-Right" = "none"
bind "main" "Right" = "history-move-forward"
bind "main" "Ctrl-Insert" = "none"
bind "main" "Insert" = "none"
bind "main" "Delete" = "none"
bind "main" "}" = "none"
bind "main" "{" = "none"
bind "main" "x" = "none"
bind "main" "n" = "none"
bind "main" "b" = "none"
bind "main" "]" = "none"
bind "main" "[" = "none"
bind "main" "Ctrl-P" = "find-next-back"
bind "main" "Ctrl-N" = "find-next"
bind "main" "N" = "none"
bind "main" "Ctrl-F" = "none"
bind "main" "Ctrl-E" = "none"
bind "main" "Ctrl-B" = "none"
bind "main" "Ctrl-A" = "none"
bind "main" ">" = "none"
bind "main" "<" = "none"



##################################
# Automatically saved keybindings
#

bind "main" "u" = "none"



##################################
# Automatically saved keybindings
#

bind "main" "Alt-Right" = "history-move-forward"
bind "main" "Alt-Left" = "history-move-back"
bind "main" "Left" = "history-move-back"



##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.success_msgbox [0|1]
  #  When you pressed a [ Save ] button in some manager, this option will make
  #  sure that a box confirming success of the operation will pop up.
  set ui.success_msgbox = 0





##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog. It makes it possible
  #  to define a set of prefixes that will be expanded if they match a string
  #  entered in the goto dialog. The prefixes can be dumb, meaning that they
  #  work only like URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.ddg <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.ddg = "https://duckduckgo.com/?q=%s"







##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.dialogs 
  #  Dialogs-specific appearance and behaviour settings.

    ## ui.dialogs.shadows [0|1]
    #  Make dialogs drop shadows (the shadows are solid, you can adjust their
    #  color by ui.colors.*.dialog.shadow). You may also want to eliminate the
    #  wide borders by adjusting setup.h.
    set ui.dialogs.shadows = 0






##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.dialogs 
  #  Dialogs-specific appearance and behaviour settings.

    ## ui.dialogs.underline_hotkeys [0|1]
    #  Whether to underline hotkeys in menus to make them more visible. Requires
    #  that underlining is enabled for the terminal.
    set ui.dialogs.underline_hotkeys = 1






##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.leds 
  #  LEDs (visual indicators) options.

    ## ui.leds.enable [0|1]
    #  Enable LEDs. These visual indicators will inform you about various
    #  states.
    set ui.leds.enable = 1


  ## ui.sessions 
  #  Sessions settings.

    ## ui.sessions.auto_restore [0|1]
    #  Automatically restore the session at start.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.auto_restore = 1

    ## ui.sessions.auto_save [0|1]
    #  Automatically save the session when quitting.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.auto_save = 1

    ## ui.sessions.auto_save_foldername <str>
    #  Name of the bookmarks folder used for auto saving and restoring session.
    #  The name has to be unique. Any folders with the same name will be
    #  deleted.
    #  
    #  This only makes sense with bookmark support.
    set ui.sessions.auto_save_foldername = "Auto saved session"

    ## ui.sessions.homepage <str>
    #  The URI to load either at startup time when no URI was given on the
    #  command line or when requested by the goto-url-home action. Set to "" if
    #  the environment variable WWW_HOME should be used as homepage URI instead.
    set ui.sessions.homepage = "https://news.ycombinator.com/news"

    ## ui.sessions.keep_session_active [0|1]
    #  Keep the session active even if the last terminal exits.
    set ui.sessions.keep_session_active = 0

    ## ui.sessions.snapshot [0|1]
    #  Automatically save a snapshot of all tabs periodically. This will
    #  periodically bookmark the tabs of each terminal in a separate folder for
    #  recovery after a crash.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.snapshot = 1


  ## ui.tabs 
  #  Window tabs settings.

    ## ui.tabs.show_bar <num>
    #  Show tabs bar on the screen:
    #  0 means never
    #  1 means only if two or more tabs are open
    #  2 means always
    set ui.tabs.show_bar = 1

    ## ui.tabs.top [0|1]
    #  Whether display tab bar at top like other browsers do.
    set ui.tabs.top = 1

    ## ui.tabs.wraparound [0|1]
    #  When moving right from the last tab, jump to the first one, and vice
    #  versa.
    set ui.tabs.wraparound = 1

    ## ui.tabs.confirm_close [0|1]
    #  When closing a tab show confirmation dialog.
    set ui.tabs.confirm_close = 0






##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.css 
  #  Options concerning how to use CSS for styling documents.

    ## document.css.enable [0|1]
    #  Enable adding of CSS style info to documents.
    set document.css.enable = 1


  ## document.dump 
  #  Dump output options.

    ## document.dump.codepage <codepage>
    #  Codepage used in dump output. 'System' stands for a codepage determined
    #  by a selected locale.
    set document.dump.codepage = "us-ascii"


  ## document.history 
  #  History options.

    ## document.history.global 
    #  Global history options.

      ## document.history.global.enable [0|1]
      #  Enable global history ("history of all pages visited").
      set document.history.global.enable = 1


    ## document.history.keep_unhistory [0|1]
    #  Keep unhistory ("forward history").
    set document.history.keep_unhistory = 1


  ## document.html 
  #  Options concerning the display of HTML pages.

    ## document.html.display_frames [0|1]
    #  Display frames.
    set document.html.display_frames = 1

    ## document.html.display_tables [0|1]
    #  Display tables.
    set document.html.display_tables = 1

    ## document.html.display_subs [0|1]
    #  Display subscripts (as [thing]).
    set document.html.display_subs = 1

    ## document.html.display_sups [0|1]
    #  Display superscripts (as ^thing).
    set document.html.display_sups = 1


  ## document.plain 
  #  Options concerning the display of plain text pages.

    ## document.plain.compress_empty_lines [0|1]
    #  Compress successive empty lines to only one in displayed text.
    set document.plain.compress_empty_lines = 0



## ui 
#  User interface options.

  ## ui.window_title [0|1]
  #  Set the window title when running in a windowing environment in an
  #  xterm-like terminal. This way the document's title is shown on the window
  #  titlebar.
  set ui.window_title = 1





##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog. It makes it possible
  #  to define a set of prefixes that will be expanded if they match a string
  #  entered in the goto dialog. The prefixes can be dumb, meaning that they
  #  work only like URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.default_template <str>
    #  Default URI template used when the string entered in the goto dialog does
    #  not appear to be a URI or a filename (i.e. contains no '.', ':' or '/'
    #  characters), and does not match any defined prefixes. Set the value to ""
    #  to disable use of the default template rewrite rule.
    #  
    #  %c in the template means the current URL,
    #  %s in the template means the whole string from the goto
    #     dialog,
    #  %0,%1,...,%9 mean the 1st,2nd,...,10th space-delimited part
    #     of %s,
    #  %% in the template means '%'.
    set protocol.rewrite.default_template = "https://www.google.com/search?q=%s&btnG=Google+Search"






##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog. It makes it possible
  #  to define a set of prefixes that will be expanded if they match a string
  #  entered in the goto dialog. The prefixes can be dumb, meaning that they
  #  work only like URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.g <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.g = "https://www.google.com/search?q=%s&btnG=Google+Search"

      ## protocol.rewrite.smart.google <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.google = "http://www.google.com/search?q=%s"







##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.html 
  #  Options concerning the display of HTML pages.

    ## document.html.wrap_nbsp [0|1]
    #  If set do not honour non breaking space (the nbsp entity) but allow to
    #  wrap the text. This can help keeping the width of documents down so no
    #  horizontal scrolling is needed.
    set document.html.wrap_nbsp = 1






##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.accesskey 
    #  Options for handling of link access keys. An HTML document can use the
    #  ACCESSKEY attribute to assign an access key to an element. When an access
    #  key is pressed, the corresponding element will be given focus.

      ## document.browse.accesskey.auto_follow [0|1]
      #  Automatically follow a link or submit a form if appropriate accesskey
      #  is pressed - this is the standard behaviour, but it's considered
      #  dangerous.
      set document.browse.accesskey.auto_follow = 0



  ## document.html 
  #  Options concerning the display of HTML pages.

    ## document.html.underline_links [0|1]
    #  Underline links.
    set document.html.underline_links = 1






##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.auto_submit [0|1]
      #  Automagically submit a form when enter is pressed with a text field
      #  selected.
      set document.browse.forms.auto_submit = 1

      ## document.browse.forms.confirm_submit [0|1]
      #  Ask for confirmation when submitting a form.
      set document.browse.forms.confirm_submit = 1

      ## document.browse.forms.input_size <num>
      #  Default form input size if none is specified.
      set document.browse.forms.input_size = 20


    ## document.browse.margin_width <num>
    #  Horizontal text margin.
    set document.browse.margin_width = 3






##################################
# Automatically saved keybindings
#

bind "main" "Ctrl-Up" = "scroll-up"
bind "main" "Ctrl-Left" = "scroll-left"
bind "main" "Ctrl-Down" = "scroll-down"



##################################
# Automatically saved keybindings
#

bind "main" "Shift-Right" = "scroll-right"
bind "main" "Shift-Left" = "scroll-left"
bind "main" "Shift-Down" = "scroll-down"



##################################
# Automatically saved keybindings
#

bind "main" "I" = "scroll-up"
bind "main" "K" = "cookie-manager"
bind "main" "J" = "scroll-left"
bind "main" "M" = "scroll-down"



##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.http 
  #  HTTP-specific options.

    ## protocol.http.compression [0|1]
    #  If enabled, the capability to receive compressed content (gzip and/or
    #  bzip2) is announced to the server, which usually sends the reply
    #  compressed, thus saving some bandwidth at slight CPU expense.
    #  
    #  If ELinks displays a incomplete page or garbage, try disabling this
    #  option. If that helps, there may be a bug in the decompression part of
    #  ELinks. Please report such bugs.
    #  
    #  If ELinks has been compiled without compression support, this option has
    #  no effect. To check the supported features, see Help -> About.
    set protocol.http.compression = 1






##############################
# Automatically saved options
#

## bookmarks 
#  Bookmark options.

  ## bookmarks.file_format <num>
  #  File format for bookmarks (affects both reading and saving):
  #  0 is the default native ELinks format
  #  1 is XBEL universal XML bookmarks format
  set bookmarks.file_format = 1





##################################
# Automatically saved keybindings
#

bind "main" "Alt-," = "tab-prev"
bind "main" "Alt-." = "tab-next"



##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.xterm-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-256color.italic [0|1]
    set terminal.xterm-256color.italic = 1





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.xterm-color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-color.underline [0|1]
    set terminal.xterm-color.underline = 1
    ## terminal.xterm-color.italic [0|1]
    set terminal.xterm-color.italic = 1





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.xterm-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-256color.charset <codepage>
    set terminal.xterm-256color.charset = "System"
    ## terminal.xterm-256color.underline [0|1]
    set terminal.xterm-256color.underline = 1
    ## terminal.xterm-256color.transparency [0|1]
    set terminal.xterm-256color.transparency = 0
    ## terminal.xterm-256color.colors <num>
    set terminal.xterm-256color.colors = 3
    ## terminal.xterm-256color.block_cursor [0|1]
    set terminal.xterm-256color.block_cursor = 0
    ## terminal.xterm-256color.restrict_852 [0|1]
    set terminal.xterm-256color.restrict_852 = 0
    ## terminal.xterm-256color.utf_8_io [0|1]
    set terminal.xterm-256color.utf_8_io = 0
    ## terminal.xterm-256color.m11_hack [0|1]
    set terminal.xterm-256color.m11_hack = 0
    ## terminal.xterm-256color.latin1_title [0|1]
    set terminal.xterm-256color.latin1_title = 1
    ## terminal.xterm-256color.type <num>
    set terminal.xterm-256color.type = 2





##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.clock 
  #  Digital clock in the status bar.

    ## ui.clock.enable [0|1]
    #  Whether to display a digital clock in the status bar.
    set ui.clock.enable = 0

    ## ui.clock.format <str>
    #  Format string for the digital clock. See the strftime(3) manpage for
    #  details.
    set ui.clock.format = "[%H:%M]"


  ## ui.dialogs 
  #  Dialogs-specific appearance and behaviour settings.

    ## ui.dialogs.underline_button_shortcuts [0|1]
    #  Whether to underline button shortcuts to make them more visible. Requires
    #  that underlining is enabled for the terminal.
    set ui.dialogs.underline_button_shortcuts = 1


  ## ui.show_menu_bar_always [0|1]
  #  Always show menu bar on the screen.
  set ui.show_menu_bar_always = 1

  ## ui.show_status_bar [0|1]
  #  Show status bar on the screen.
  set ui.show_status_bar = 1

  ## ui.show_title_bar [0|1]
  #  Show title bar on the screen.
  set ui.show_title_bar = 1

  ## ui.startup_goto_dialog [0|1]
  #  Pop up goto dialog in newly created tabs when there's no homepage set. This
  #  means also showing goto dialog on startup.
  set ui.startup_goto_dialog = 1


